#Creator: Alexander Lopez
#Purpose: Automate VPC & EC2 Deployment
#Assumptions: Preconfigured Iam Policy, Key Pair, Image
#Scope: Provisions VPC (including Subnet, Route Table, Routes, Internet Gateway, Network ACL), Security Group, EC2 Instance, Associates EIP to EC2 Instance
#WARNING: For the scope of this example, SSH is set to 0.0.0.0/0. Adjust prior to using in production. 

Resources:
  ############################# VPC ###########################  
  VPC1: #Logical ID
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: #SET VALUE
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags: 
        - Key: "Name"
          Value: "Value" #SET VALUE
  ############################# Subnet ###########################
  Subnet1: #Logical ID
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: #SET VALUE
      CidrBlock: #SET VALUE 
      Tags:
        - Key: "Name"
          Value: "Value" #SET VALUE
      VpcId: 
        Ref: VPC1 #References the VPC resource by logical ID
  ########################### Internet Gateway #######################
  InternetGateway1: #Logical ID
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "Name"
          Value: "Value" #SET VALUE
  ########################### Attach Internet Gateway to VPC ############
  AttachInternetGateway1: #Logical ID
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateway1 #References InternetGateway
      VpcId: 
        Ref: VPC1 #References VPC
  ######################### Create Route Table #######################        
  RouteTable1: #Logical ID
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: "Name"
          Value: "Value" #SET VALUE
      VpcId:
        Ref: VPC1 #References VPC by logical ID
  ####################### Create Route ##############################
  RouteToAllowTraffic1: #Logical ID
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RouteTable1 #References RouteTable1 by logical ID
      GatewayId:
        Ref: InternetGateway1
      DestinationCidrBlock: "" #SET VALUE 
  ####################### Associate Route Table to Subnet ##############
  AssociateRouteTabletoSubnet1: #Logical ID
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable1 #References Route Table
      SubnetId:
        Ref: Subnet1 #References SubnetId
  ##################### Create Network ACL #############################
  NetworkACL1: #Logical ID
    Type: AWS::EC2::NetworkAcl
    Properties:
      Tags:
        - Key: "Name"
          Value: "Value" #SET VALUE
      VpcId:
        Ref: VPC1
  ##################### Create Network ACL Entry 1########################
  NetworkACLEntry1: #Logical ID
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: 
        Ref: NetworkACL1
      RuleNumber: #SET VALUE
      Protocol: #SET VALUE
      RuleAction: #SET VALUE
      CidrBlock: #SET VALUE
      PortRange:
        From: #SET VALUE
        To: #SET VALUE
  ###################### Create Network ACL Entry 2 ########################
  NetworkACLEntry2: #Logical ID
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NetworkACL1
      Egress: #SET VALUE
      RuleNumber: #SET VALUE
      Protocol: -1 #Refers to All
      RuleAction: #SET VALUE
      CidrBlock: #SET VALUE
  ###################### Associate Subnet to Network ACL####################
  AssociateSubnetToNetworkACL1: #Logical ID
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId:
        Ref: NetworkACL1
      SubnetId:
        Ref: Subnet1
  ######################## Create Security Group ###########################
  SecurityGroup1: #Logical ID
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: 
        Ref: VPC1 
      GroupDescription: #SET VALUE
      GroupName: #SET VALUE
      SecurityGroupIngress:
        - IpProtocol: #SET VALUE
          FromPort: #SET VALUE
          ToPort: #SET VALUE
          CidrIp: #SET VALUE
  ######################## Create EC2 Instance #############################
  EC2Instance1: #Logical ID
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: #SET VALUE
      SubnetId:
        Ref: Subnet1
      KeyName: 
      Tags:
        - Key: "Name"
          Value: "Value" #SET VALUE
      InstanceType: #SET VALUE
      ImageId: #SET VALUE
      IamInstanceProfile: #SET VALUE
      SecurityGroupIds:
        [Ref: SecurityGroup1]
  ####################### Associate Public IP Address to EC2 Instance#####
  PublicIPAddress1: #LogicalID
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc 
      InstanceId: 
        Ref: EC2Instance1 #Associate Elastic IP to EC2
